---
title: box office 2
author: ''
date: '2021-01-30'
slug: box-office-2
categories: []
tags: []
---



```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
```


```{r Import Data}
library(tidyverse)
library(rvest)
library(broom)
library(lubridate)
library(plotly)
library(DT)
library(RColorBrewer)
library(WDI)
library(ineq)

theme_set(theme_light())



indicators <- c("cpi_series" = "FP.CPI.TOTL")
wdi_data <- WDI(indicator = indicators, country = "US")


# base_url <- "https://www.the-numbers.com/movie/budgets/all/"
# movie_vec <- seq(1, 6001, 100)
# movie_df <- data.frame()
# 
# for (i in  movie_vec) {
#   
#   movie_url <- paste0(base_url, i)
#   movie_html <- read_html(movie_url)
#   temp_df <- html_table(movie_html, fill = T) %>% 
#     as.data.frame() %>% 
#     select(-1)
#   movie_df <- bind_rows(movie_df, temp_df)
#   
# }
# 
# openxlsx::write.xlsx(movie_df, "BoxOffice.xlsx")
movie_df <- readxl::read_excel("C:/Users/Alpha Go/Documents/R/Machine Learning/4. BoxOffice/BoxOffice.xlsx")
```

```{r Clean Data}
data <- movie_df %>% 
  janitor::clean_names() %>% 
  rename(release_date_temp = release_date) %>% 
  mutate(release_date = mdy(release_date_temp),
         release_year_temp = year(release_date),
         release_year = ifelse(is.na(release_year_temp), parse_number(release_date_temp), release_year_temp),
         release_month = as.integer(month(release_date)),
         release_decade = as.factor(release_year - release_year %% 10),
         production_budget = parse_number(production_budget),
         domestic_gross = parse_number(domestic_gross),
         worldwide_gross = parse_number(worldwide_gross)) %>% 
  filter(worldwide_gross != 0 & release_date_temp != "Unknown" & release_year < 2020) %>% 
  filter(!(production_budget > 1e4 & worldwide_gross < 1000)) %>% 
  mutate(release_decade = fct_lump(release_decade, 4, other_level = "before_1980")) %>% 
  inner_join(wdi_data, by = c("release_year" = "year")) %>% 
  mutate(production_budget_adj = production_budget * (100/cpi_series),
         domestic_gross_adj = domestic_gross * (100/cpi_series),
         worldwide_gross_adj = worldwide_gross * (100/cpi_series),
         production_budget_adj_log = log(production_budget_adj),
         domestic_gross_adj_log = log(domestic_gross_adj),
         worldwide_gross_adj_log = log(worldwide_gross_adj)) %>% 
  mutate(across(ends_with("adj"), ~ ./1e6))
```

# Introduction
In the last couple of years a lot of people have noted that the share of high budget movie production has increased and that movies with smaller and mid-sized budgets have a more difficult time to obtain financing. By leveraging on data compiled by the website [The Numbers](https://www.the-numbers.com/movie/budgets/all) I will try to provide some insights on this issue. In addition, the dataset can help us to tackle some other questions as well.

1. Profitability
    - How has profitability evolved over time and what are some of most and least profitable movies.
2. Domestic vs Worldwide Gross
    - Overall how important is the domestic US market for movies and has this changed over time.
3. Predictive ability of movie budgets for box office success
    - Do more expensive movies make more money at the box office and how strong is this relationship.
4. Inequality in box office success
    - Does potential inequality in production budgets also translate into more inequality at the box office.

# Overview {.tabset .tabset-pills}

Overall, the final dataset contains `r nrow(data)` movies with data on Production Budgets as well as Domestic and Worldwide Gross measured in Millions (Mio.) of Dollars ($). Since the movies are spread across 6 decades the values are adjusted for inflation. Given that the dataset does not contain information on where a movie was produced the US consumer price index (CPI) is used to adjust for inflation.

The graph below plots the number of movies by release year. Starting in the 2000s we have data on about 200 movies per year. However, this number drops significantly before the late 1990s. For example, we have about 30 movies per year for the 1980s and even less before that. This suggests that the data before the late 1990 is likely restricted to more well known and more successful movies. This will likely bias some of the comparisons and should be kept in mind when interpreting the results.

The other tab depicts the relative frequency of movie releases by month. While there is some heterogeneity between decades January appear to be the least popular month for releasing movies. This effects appears to be even more pronounced for the 80s. At the same time, the share of releases in June is conspicuously high. One potential explanation for this might go as follows: 1) The data for the 80s is biased towards more popular movies and these are more likely to be released in summer. Whether or not this is true has to be settled another time. Alternatively there is always the option to call on the the elderly to ascertain the validity of any given chain of reasoning and provide an authoritative answer.

## Number of Movies over Time

```{r Number of Movies}
movie_numbers <- data %>% 
count(release_year) %>% 
ggplot(aes(release_year, n)) +
geom_line(col = "royalblue") +
scale_x_continuous(breaks = seq(1960, 2020, 10)) +
labs(title = "Number of Movies over time",
     x = "Release Year",
     y = "Number")

plotly::ggplotly(movie_numbers)
```

## Relative Frequency of Movies per Month

```{r Movies per Month}
movies_per_month <- data %>% 
  filter(release_year >= 1980) %>% 
  count(release_decade, release_month) %>% 
  group_by(release_decade) %>% 
  mutate(percentage_per_month = n/sum(n) * 100) %>% 
  ggplot(aes(release_month, percentage_per_month, fill = release_decade)) +
  geom_col(position = position_dodge()) +
  scale_x_continuous(breaks = seq(1, 12, 1)) +
  scale_fill_brewer(palette = "Set1") +
  labs(title = "Relative Frequency of Movie Releases by Month",
       y = "Relative Frequency (in %)",
       x = NULL)

ggplotly(movies_per_month) %>% 
    layout(legend = list(orientation = "h", x = 0.3, y = -0.1))

```

# {-}

In terms of production budget we see that the typical movie (i.e. median) between 2010 and 2019 cost about 18 Mio. $ to produce and generated about 37 Mio. $ in income. Moreover, during the last 3 decades smaller movies (i.e. 25% Quantile) had an unfavorable cost-income profile.

```{r Summary Statistics}
summary_statistic <- data %>% 
  filter(release_year >= 1980) %>% 
  pivot_longer(cols = production_budget_adj:worldwide_gross_adj, names_to = "metric", values_to = "value") %>% 
  group_by(metric, release_decade) %>% 
  summarise(mean = mean(value, na.rm = TRUE),
            median = median(value, na.rm = TRUE),
            quantile_25 = quantile(value, probs = 0.25, na.rm = TRUE),
            quantile_75 = quantile(value, probs = 0.75, na.rm = TRUE)) %>% 
  pivot_longer(cols = mean:quantile_75, names_to = "summary_statistic", values_to = "value") %>% 
  mutate(metric = factor(metric, levels= c("production_budget_adj", "domestic_gross_adj", "worldwide_gross_adj")),
         summary_statistic = factor(summary_statistic, levels = c("quantile_25", "median", "mean", "quantile_75"))) %>% 
  ggplot(aes(value, summary_statistic, fill = release_decade)) +
  geom_col(position = position_dodge()) +
  facet_wrap(~metric) +
  scale_fill_brewer(palette = "Set1") +
  labs(title = "Summary Statistics for Budget and Box Office (Values in Mio. $)",
       x = NULL,
       y = NULL)

ggplotly(summary_statistic) %>% 
  layout(legend = list(orientation = "h", x = 0.3, y = -0.1))

```

What sticks out to me is that the highest grossing movies during the 2000s were largely dominated by 3 franchises: Lord of the Rings, Harry Potter and Pirates of the Caribbean. In contrast the 90s had the most diverse set of movies in the top 10.

```{r Highest Worldwide Gross, fig.height = 6, fig.width = 9}
data %>% 
  filter(release_year >= 1980) %>% 
  group_by(release_decade) %>% 
  slice_max(order_by = worldwide_gross_adj, n = 10, with_ties = FALSE) %>% 
  ungroup() %>% 
  mutate(movie = tidytext::reorder_within(movie, worldwide_gross_adj, release_decade),
         worldwide_gross_adj = round(worldwide_gross_adj)) %>%
  ggplot(aes(worldwide_gross_adj, movie, fill = release_decade, label = worldwide_gross_adj)) +
  geom_col(show.legend = FALSE) +
  geom_text(show.legend = FALSE, hjust = 1.5, size = 2.5) +
  facet_wrap(~release_decade, scales = "free_y") +
  tidytext::scale_y_reordered() +
  scale_fill_brewer(palette = "Set1") +
  labs(title = "Highest Worldwide Gross (in Mio. $) by Decade",
       x = NULL, 
       y = NULL)
```

# Profitability {.tabset .tabset-pills}

The average profitability ratio (i.e. Worldwide Gross/Production Budget) of movies in the last two decades is around 3.7 whereas the profitability ratio in the 90s and 80s is significantly higher. This pattern is probably driven at least in part by the selection bias of the dataset.

```{r Profitability}
profitability <- data %>% 
  filter(release_year >= 1980) %>% 
  mutate(boxoffice_budget = worldwide_gross_adj/production_budget_adj) %>% 
  group_by(release_decade) %>% 
  summarise(mean = mean(boxoffice_budget, na.rm = TRUE),
            median = median(boxoffice_budget, na.rm = TRUE),
            quantile_25 = quantile(boxoffice_budget, probs = 0.25, na.rm = TRUE),
            quantile_75 = quantile(boxoffice_budget, probs = 0.75, na.rm = TRUE)) %>% 
  pivot_longer(cols = mean:quantile_75, names_to = "summary_statistic", values_to = "value") %>% 
  mutate(summary_statistic = factor(summary_statistic, levels = c("quantile_25", "median", "mean", "quantile_75"))) %>% 
  ggplot(aes(value, summary_statistic, fill = release_decade)) +
  geom_col(position = position_dodge()) +
  scale_x_continuous(breaks = seq(0, 8, 1)) +
  geom_vline(xintercept = 1, linetype = "dashed", alpha = 0.5) +
  scale_fill_brewer(palette = "Set1") +
  labs(title = "Profitability of Movies by Decade",
       x = "Ratio of Worldwide Gross to Production Budget",
       y = NULL)

ggplotly(profitability) %>% 
    layout(legend = list(orientation = "h", x = 0.3, y = -0.2))
```

A different way to look at the profitability is to focus on the number of movies that were not profitable (i.e. Production Budget > Worldwide Gross) which is plotted in the graph below. At its peak about one in two movies was unprofitable. Since  then there appears to be a slight downward trend with periodic spikes.

```{r}
unprofitable <- data %>% 
  filter(release_year >= 1980) %>% 
  mutate(boxoffice_budget = worldwide_gross_adj/production_budget_adj,
         unprofitable = ifelse(boxoffice_budget < 1, 1, 0)) %>% 
  group_by(release_year) %>% 
  summarise(share_unprofitable = mean(unprofitable) * 100) %>% 
  ggplot(aes(release_year, share_unprofitable)) +
  geom_line(col = "royalblue") +
  labs(title = "Share of unprofitable movies over time",
       x = NULL,
       y = "Share (in %)")

ggplotly(unprofitable)
  
```

Let us now look at the least and most profitable movies of the last four decades. In order to limit ourselves to reasonable popular movies I filtered our the ones that made less than 100 Mio. $ worldwide. At the sad end of the scale we are greeted by Final Fantasy: The Spirits Within. At the other end Mad Max, The Blair Witch Project and Paranormal Activity made their producers very happy by returning more than 400 times of the budget. What stands out to me is that in the last decade horror movies make up the majority of the top 10 but the one extremely big hit is missing.

## Lowest Profitability

```{r Low Profitability, fig.height = 6, fig.width = 9}
data %>% 
  filter(release_year >= 1980 & worldwide_gross_adj >= 100) %>% 
  mutate(boxoffice_budget = worldwide_gross_adj/production_budget_adj) %>%
  group_by(release_decade) %>% 
  slice_min(order_by = boxoffice_budget, n = 10, with_ties = FALSE) %>% 
  ungroup() %>% 
  mutate(movie = tidytext::reorder_within(movie, boxoffice_budget, release_decade),
         boxoffice_budget = round(boxoffice_budget, 2)) %>%
  ggplot(aes(boxoffice_budget, movie, fill = release_decade, label = boxoffice_budget)) +
  geom_col(show.legend = FALSE) +
  geom_text(show.legend = FALSE, hjust = 1.5, size = 2.5) +
  facet_wrap(~release_decade, scales = "free_y") +
  tidytext::scale_y_reordered() +
  scale_fill_brewer(palette = "Set1") +
  labs(x = NULL, 
       y = NULL)
```

## Highest Profitability

```{r High Profitability, fig.height = 6, fig.width = 9}
data %>% 
  filter(release_year >= 1980 & worldwide_gross_adj >= 100) %>% 
  mutate(boxoffice_budget = worldwide_gross_adj/production_budget_adj) %>%
  group_by(release_decade) %>% 
  slice_max(order_by = boxoffice_budget, n = 10, with_ties = FALSE) %>% 
  ungroup() %>% 
  mutate(movie = tidytext::reorder_within(movie, boxoffice_budget, release_decade),
         boxoffice_budget = round(boxoffice_budget, 2)) %>%
  ggplot(aes(boxoffice_budget, movie, fill = release_decade, label = boxoffice_budget)) +
  geom_col(show.legend = FALSE) +
  geom_text(show.legend = FALSE, hjust = 0.5, size = 2.5) +
  facet_wrap(~release_decade, scales = "free_y") +
  tidytext::scale_y_reordered() +
  scale_fill_brewer(palette = "Set1") +
  labs(x = NULL, 
       y = NULL)
```

# {-}

# Domestic Share {.tabset .tabset-pills}

The share of the worldwide gross that is made up by the domestic US market has declined steadily since the 80s from above 70% to below 40% in the last couple of years.

```{r Domestic Share over Time}
domestic_share <- data %>% 
  filter(release_year >= 1980) %>% 
  group_by(release_year) %>% 
  summarise(domestic_share = sum(domestic_gross_adj)/sum(worldwide_gross_adj) * 100) %>% 
  ggplot(aes(release_year, domestic_share)) +
  geom_line(col = "royalblue") +
  scale_x_continuous(breaks = seq(1980, 2020, 10)) +
  labs(title = "Ratio of Domestic Gross to Worldwide Gross over Time",
       x = NULL,
       y = "Domestic Share (in %)")

ggplotly(domestic_share)
```

For the top 10 list below only movies with more than 100 Mio. $ worldwide gross were considered. Movies with a large domestic share in the last two decades seem to be located disproportionately in the comedy genre.

## Top 10 Lowest Domestic Share (in %) by Decade

```{r Lowest Domestic Share, fig.height = 6, fig.width = 9}
data %>% 
  filter(release_year >= 1980 & worldwide_gross_adj >= 100) %>% 
  mutate(domestic_share = domestic_gross_adj/worldwide_gross_adj * 100) %>% 
  filter(domestic_share < 100) %>% 
  group_by(release_decade) %>% 
  slice_min(order_by = domestic_share, n = 10, with_ties = FALSE) %>% 
  ungroup() %>% 
  mutate(movie = tidytext::reorder_within(movie, domestic_share, release_decade)) %>% 
  ggplot(aes(domestic_share, movie, fill = release_decade)) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~release_decade, scales = "free_y") +
  tidytext::scale_y_reordered() +
  scale_fill_brewer(palette = "Set1") +
  labs(x = NULL, 
       y = NULL)

```

## Top 10 Highest Domestic Share (in %) by Decade

```{r Highest Domestic Share, fig.height = 6, fig.width = 9}
data %>% 
  filter(release_year >= 1980 & worldwide_gross_adj >= 100) %>% 
  mutate(domestic_share = domestic_gross_adj/worldwide_gross_adj * 100) %>% 
  filter(domestic_share < 100) %>% 
  group_by(release_decade) %>% 
  slice_max(order_by = domestic_share, n = 10, with_ties = FALSE) %>% 
  ungroup() %>% 
  mutate(movie = tidytext::reorder_within(movie, domestic_share, release_decade)) %>% 
  ggplot(aes(domestic_share, movie, fill = release_decade)) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~release_decade, scales = "free_y") +
  tidytext::scale_y_reordered() +
  scale_fill_brewer(palette = "Set1") +
  labs(x = NULL,
       y = NULL)

```

# {-}

# Predictability of Box Office {.tabset .tabset-pills}

With this dataset one natural question to ask is how well does the production budget predict box office success. Based on the visual inspection above it seems clear that budget and box office results are positively related.

```{r Scatter Plot Budget vs. Box Office}
data %>% 
  ggplot(aes(production_budget_adj, worldwide_gross_adj)) +
  geom_point(col = "royalblue", alpha = 0.5) +
  labs(title = "Scatterplot of Production Budget and Worldwide Gross",
       x = "Production Budget (in Mio. $)",
       y = "Worldwide Gross (in Mio. $)") 


```

In order to quantify the effect more precisely I estimate the follwoing  very simple linear regression model where the production budget and the release decade are the only predictors. 

$worldwide \: gross = \beta_0 +\beta_1 \times production \: budget + \beta_2 \times production\:budget^2 + \beta_3 \times release\:decade +\epsilon$
```{r Linear Regression Model}
model <- lm(worldwide_gross_adj ~ production_budget_adj + I(production_budget_adj^2) + release_decade, 
            data = data %>% filter(release_year >= 1980))
```

The estimated results are shown in the table below. The R-squared of the model is `r round(summary(model)$r.squared, 4)` which tells us that about half of the variation in box office success can be explained by differences in the production budget and release decade. If we had additional data on the genre, actors, director and some measures of social media hype (e.g. tweets, youtube clicks) the predictive power of the model would likely improve. 

```{r Results Linear Regression Model}
sjPlot::tab_model(model, show.se = TRUE, show.stat = TRUE, auto.label = FALSE, digits = 4)

```


Now what do the estimated coefficients about the relationship between production budget and worldwide gross. The marginal effect of a small change in the budget on the worldwide gross is given by the first derivative with respect to the production budget. 
 
$\frac{d (worldwide \: gross)}{d (production \: budget)}\ = \beta_1 + 2 \times\beta_2 \times production\:budget$

Given that the coefficients $\beta_1$ and $\beta_2$ are both positive, this tells us that more budget is associated with a higher worldwide gross which probably does not come as a surprise. Moreover, we see that the marginal effect is not constant and depends on the level of the production budget. In other words, increasing the budget from 110 to 111 Mio has a bigger effect then an increase from 10 to 11 Mio. In this case the additional effect is $(110-100) \times \beta_2$ which is equal to 0.75 Mio. This nonlinear effect can also be deduced by looking at the fitted values which give us the mean model prediction for a given values of the predictor variable.

```{r Fitted Line of Linear Regression Model}
fitted <- augment(model) %>% 
#rename(production_budget_adj = 'log(production_budget_adj)', worldwide_gross_adj = 'log(worldwide_gross_adj)') %>% 
ggplot(aes(production_budget_adj, worldwide_gross_adj)) +
  geom_point(col = "grey") +
  geom_line(aes(production_budget_adj, .fitted, col = release_decade)) +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  labs(title = "Fitted Values of Linear Regression Model",
       x = "Production Budget (in Mio. $)", 
       y = "Worldwide Gross (in Mio. $)")

ggplotly(fitted) %>% 
    layout(legend = list(orientation = "h", x = 0.3, y = -0.2))

# augment(model) %>% 
# #rename(production_budget_adj = 'log(production_budget_adj)', worldwide_gross_adj = 'log(worldwide_gross_adj)') %>% 
# ggplot(aes(production_budget_adj_log, .resid)) +
#   geom_point(col = "grey")

```

## Biggest Underachievers

Based on the plot of the fitted values one may also wonder which movies did better or worse compared to the prediction.

```{r Biggest Underachievers, fig.height = 6, fig.width = 9}
augment(model) %>% 
  mutate(modified_zscore = 0.6745 * (.resid - median(.resid, nna.rm = TRUE))/mad(.resid, na.rm = TRUE)) %>% 
  group_by(release_decade) %>% 
  slice_min(order_by = modified_zscore, n = 10, with_ties = FALSE) %>% 
  ungroup() %>% 
  inner_join(data %>% select(movie, worldwide_gross_adj, production_budget_adj, release_decade), 
             by = c("worldwide_gross_adj", "production_budget_adj", "release_decade")) %>% 
  mutate(movie = tidytext::reorder_within(movie, modified_zscore, release_decade)) %>% 
  ggplot(aes(modified_zscore, movie, fill = release_decade)) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~release_decade, scales = "free_y") +
  tidytext::scale_y_reordered() +
  scale_fill_brewer(palette = "Set1") +
  labs(x = NULL,
       y = NULL)
```

## Biggest Overachievers

```{r Biggest Overachievers, fig.height = 6, fig.width = 9}
augment(model) %>% 
  mutate(modified_zscore = 0.6745 * (.resid - median(.resid, nna.rm = TRUE))/mad(.resid, na.rm = TRUE)) %>% 
  group_by(release_decade) %>% 
  slice_max(order_by = modified_zscore, n = 10, with_ties = FALSE) %>% 
  ungroup() %>% 
  inner_join(data %>% select(movie, worldwide_gross_adj, production_budget_adj, release_decade), 
             by = c("worldwide_gross_adj", "production_budget_adj", "release_decade")) %>% 
  mutate(movie = tidytext::reorder_within(movie, modified_zscore, release_decade)) %>%
  ggplot(aes(modified_zscore, movie, fill = release_decade)) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~release_decade, scales = "free_y") +
  tidytext::scale_y_reordered() +
  scale_fill_brewer(palette = "Set1") +
  labs(x = NULL,
       y = NULL)
```

# {-}

# Box Office Inequality

```{r}
top_share <- data %>% 
  filter(release_year >= 1980) %>% 
  group_by(release_decade) %>% 
  mutate(budget_conditional_90 = ifelse(cume_dist(production_budget_adj) > 0.9, production_budget_adj,0),
         budget_conditional_95 = ifelse(cume_dist(production_budget_adj) > 0.95, production_budget_adj,0),
         budget_conditional_99 = ifelse(cume_dist(production_budget_adj) > 0.99, production_budget_adj,0)) %>% 
  summarise(top10_percent = sum(budget_conditional_90)/sum(production_budget_adj) * 100,
            top5_percent = sum(budget_conditional_95)/sum(production_budget_adj) * 100,
            top1_percent = sum(budget_conditional_99)/sum(production_budget_adj) * 100) %>% 
  pivot_longer(cols = starts_with("top"), names_to = "top", values_to = "value") %>% 
  mutate(top = fct_reorder(top, value)) %>% 
  ggplot(aes(value, top, fill = release_decade)) +
  geom_col(position = position_dodge()) +
  scale_fill_brewer(palette = "Set1") + 
  labs(title = "Top Budget Share by Decade", 
       x = "Share (in %)",
       y = NULL)

ggplotly(top_share) %>% 
  layout(legend = list(orientation = "h", x = 0.3, y = -0.2))
```


```{r}
data %>% 
  filter(release_year >= 1980) %>% 
  ggplot(aes(production_budget_adj, col = release_decade)) +
  gglorenz::stat_lorenz(size = 1) +
  coord_fixed() +
  geom_abline(linetype = "dashed") + 
  scale_color_brewer(palette = "Set1") +
  scale_x_continuous(breaks = seq(0, 1, 0.1)) +
  scale_y_continuous(breaks = seq(0, 1, 0.1)) +
  theme(legend.position =  "bottom", legend.title = element_blank()) +
  labs(title = "Lorenz Curve by Decade",
       x = "Cumulative Share of Movies (From Lowest to Highest)",
       y = "Cumulative Share of Production Budget")

# ggplotly(lorenz_curve) %>% 
#     layout(legend = list(orientation = "h", x = 0.3, y = -0.15), width = 600, height = 600)


```


```{r}
data %>% 
  filter(release_year >= 1980) %>% 
  group_by(release_decade) %>% 
  summarise(gini = round(ineq(production_budget_adj, type = "Gini"), 2)) %>% 
  ggplot(aes(release_decade, gini, label = gini)) +
  geom_col(fill = "royalblue") +
  geom_label() +
  labs(title = "Gini Index by Decade",
       x = NULL,
       y = "Gini Index")

```


```{r}
gini_year <- data %>% 
  filter(release_year >= 1980) %>% 
  group_by(release_year) %>% 
  summarise(gini = round(ineq(production_budget_adj, type = "Gini"), 2)) %>% 
  ggplot(aes(release_year, gini)) +
  geom_line(col = "royalblue") +
  labs(title = "Gini Index by Year", 
       x = NULL,
       y = "Gini Index")

ggplotly(gini_year)
```



```{r}
data %>% 
  filter(release_year >= 1980) %>% 
  group_by(release_year) %>% 
  summarise(gini = ineq(production_budget_adj, type = "Gini"),
            number = n()) %>% 
  ggplot(aes(number, gini)) +
  geom_point(col = "royalblue") +
  geom_smooth(method = "lm", col = "indianred") +
  labs(title = "Relationship between Number of Movies and Gini Coefficient",
       x = "Number of Movies",
       y = "Gini Coefficient")
```

